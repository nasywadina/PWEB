import { useState } from 'react';
import { useNavigate } from 'react-router-dom';

function AdminPage() {
  const navigate = useNavigate();

  // State for vegetable stock amounts and prices
  const [products, setProducts] = useState([
    {
      id: 1,
      name: 'Fresh Tomatoes',
      image: '../public/image/tomat.jpg',
      price: 15000,
      stock: 0,
    },
    {
      id: 2,
      name: 'Chilli',
      image: '../public/image/cabe.jpg',
      price: 10000,
      stock: 0,
    },
    {
      id: 3,
      name: 'Potatoes',
      image: '../public/image/kentang.jpg',
      price: 10000,
      stock: 0,
    },
    {
      id: 4,
      name: 'Corn',
      image: '../public/image/jagung.jpg',
      price: 10000,
      stock: 0,
    },
  ]);

  // State for new product form input
  const [newProduct, setNewProduct] = useState({
    name: '',
    image: '',
    price: 0,
    stock: 0,
  });

  const handleProductChange = (e, id) => {
    const { name, value } = e.target;
    setProducts((prevState) =>
      prevState.map((product) =>
        product.id === id
          ? { ...product, [name]: value }
          : product
      )
    );
  };

  const handleNewProductChange = (e) => {
    const { name, value } = e.target;
    setNewProduct({ ...newProduct, [name]: value });
  };

  const addNewProduct = () => {
    const newProductData = { ...newProduct, id: Date.now() };
    setProducts((prevState) => [...prevState, newProductData]);
    setNewProduct({ name: '', image: '', price: 0, stock: 0 }); // Reset new product form
  };

  const Logout = () => {
    navigate("/");  // ke home
  };

  {/* ja itu diatas make gpt*/}

  return (
    <div className="font-sans bg-gray-100">
      {/* Navbar */}
      <nav className="sticky top-0 z-50 w-full bg-white shadow-md">
        <div className="container mx-auto px-4">
          <div className="flex justify-between items-center py-4">
            {/* Logo and Text */}
            <div className="flex items-center space-x-2">
              <img src="../public/image/logo.png" alt="Logo" width="70" />
              <span className="text-black text-xl font-bold">Sayur Mayur Admin</span>
            </div>

            {/* Log out Button */}
           
            <button
                id="logout"
                type="submit"
                className="bg-green-500 text-white py-2 px-6 rounded-lg hover:bg-green-600 focus:outline-none transition duration-300"
                onClick={Logout} 
              >
                Logout
              </button>
          </div>
        </div>
      </nav>

      {/* List of Vegetables */}
      <section className="py-10 px-5 bg-gray-100">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl font-semibold text-gray-800 mb-8">
            Stock Vegetables
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-8">
            {products.map((product) => (
              <div key={product.id} className="bg-white p-6 rounded-lg shadow-lg">
                <img
                  src={product.image}
                  alt={product.name}
                  className="w-full h-48 object-cover rounded-t-lg"
                />
                <h3 className="text-xl font-semibold mt-4">{product.name}</h3>
                <p className="text-gray-600 mt-2">
                  Perfect for cooking or fresh use. Always fresh and organic.
                </p>
                <p className="text-green-500 font-bold mt-2">Rp{product.price.toLocaleString()},00 / kg</p>
                <div className="mt-4">
                  <label
                    htmlFor={`stock_${product.id}`}
                    className="block text-left text-lg text-gray-700"
                  >
                    Stock Available (Admin Edit)
                  </label>
                  <input
                    type="text"
                    id={`stock_${product.id}`}
                    name="stock"
                    className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 appearance-none" // Added 'appearance-none' to remove the spinner
                    value={product.stock}
                    min="0"
                    onChange={(e) => handleProductChange(e, product.id)}
                  />
                </div>
                <div className="mt-4">
                  <label
                    htmlFor={`price_${product.id}`}
                    className="block text-left text-lg text-gray-700"
                  >
                    Price (per unit)
                  </label>
                  <input
                    type="text"
                    id={`price_${product.id}`}
                    name="price"
                    className="w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 appearance-none" // Added 'appearance-none' to remove the spinner
                    value={product.price}
                    min="0"
                    onChange={(e) => handleProductChange(e, product.id)}
                  />
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Add New Product Form */}
      <section className="py-10 px-5 bg-gray-100">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl font-semibold text-gray-800 mb-8">Add New Product</h2>
          <div className="bg-white p-6 rounded-lg shadow-lg">
            <input
              type="text"
              name="name"
              placeholder="Product Name"
              value={newProduct.name}
              onChange={handleNewProductChange}
              className="w-full p-3 border rounded-lg mb-4"
            />
            {/* <input buat gambar
              type="text"
              name="image"
              placeholder="Product Image URL"
              value={newProduct.image}
              onChange={handleNewProductChange}
              className="w-full p-3 border rounded-lg mb-4"
            /> */}
            <input
              type="text"
              name="price"
              placeholder="Product Price"
              value={newProduct.price}
              onChange={handleNewProductChange}
              className="w-full p-3 border rounded-lg mb-4 appearance-none" // Added 'appearance-none' to remove the spinner
            />
            <input
              type="text"
              name="stock"
              placeholder="Stock Quantity"
              value={newProduct.stock}
              onChange={handleNewProductChange}
              className="w-full p-3 border rounded-lg mb-4 appearance-none" // Added 'appearance-none' to remove the spinner
            />
            <button
              type="button"
              className="w-full bg-blue-500 text-white py-2 px-6 rounded-lg hover:bg-blue-700 focus:outline-none transition duration-300"
              onClick={addNewProduct}
            >
              Add Product
            </button>
          </div>
        </div>
      </section>
    </div>
  );
}

export default AdminPage;
